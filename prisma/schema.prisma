generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProposalStatus {
  approved
  rejected
}

model Proposal {
  id                   String    @id @default(cuid())
  status               String
  companyCnpj          String
  employeeCpf          String
  totalLoanAmount      Int
  numberOfInstallments Int
  installmentAmount    Int
  firstDueDate         DateTime
  installmentsPaid     Int
  companyName          String
  employerEmail        String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime?

  company  Company  @relation(fields: [companyCnpj], references: [cnpj])
  employee Employee @relation(fields: [employeeCpf], references: [cpf])

  @@unique([companyCnpj, employeeCpf, totalLoanAmount, numberOfInstallments], name: "proposal_unique")
  @@index([companyCnpj, employeeCpf, totalLoanAmount, numberOfInstallments], name: "proposal_lookup_idx")
  @@map("proposals")
}

model Company {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  cpf       String    @unique
  cnpj      String    @unique
  legalName String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  proposals Proposal[]
  employees Employee[]

  @@map("companies")
}

model Employee {
  id                String    @id @default(cuid())
  fullName          String
  email             String    @unique
  cpf               String    @unique
  salary            Int
  currentlyEmployed Boolean   @default(true)
  companyCnpj       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?

  company   Company    @relation(fields: [companyCnpj], references: [cnpj])
  proposals Proposal[]

  @@map("employees")
}
