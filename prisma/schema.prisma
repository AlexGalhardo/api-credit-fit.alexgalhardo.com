generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProposalStatus {
  APPROVED
  REJECTED
}

model Proposal {
  id                   String    @id @default(cuid()) @map("id")
  status               String    @map("status")
  companyCnpj          String    @map("company_cnpj")
  employeeCpf          String    @map("employee_cpf")
  totalLoanAmount      Int       @map("total_loan_amount")
  numberOfInstallments Int       @map("number_of_installments")
  installmentAmount    Int       @map("installment_amount")
  firstDueDate         DateTime  @map("first_due_date")
  installmentsPaid     Int       @map("installments_paid")
  companyName          String    @map("company_name")
  employerEmail        String    @map("employer_email")
  employeeCreditScore  Int       @map("employee_credit_score")
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  deletedAt            DateTime? @map("deleted_at")

  company  Company  @relation(fields: [companyCnpj], references: [cnpj])
  employee Employee @relation(fields: [employeeCpf], references: [cpf])

  @@unique([companyCnpj, employeeCpf, totalLoanAmount, numberOfInstallments], name: "proposal_unique")
  @@index([companyCnpj, employeeCpf, totalLoanAmount, numberOfInstallments], name: "proposal_lookup_idx")
  @@map("proposals")
}

model Company {
  id        String    @id @default(cuid()) @map("id")
  name      String    @map("name")
  email     String    @unique @map("email")
  cpf       String    @unique @map("cpf")
  cnpj      String    @unique @map("cnpj")
  legalName String    @map("legal_name")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  proposals Proposal[]
  employees Employee[]

  @@map("companies")
}

model Employee {
  id                String    @id @default(cuid()) @map("id")
  fullName          String    @map("full_name")
  email             String    @unique @map("email")
  cpf               String    @unique @map("cpf")
  salary            Int       @map("salary")
  currentlyEmployed Boolean   @default(true) @map("currently_employed")
  companyCnpj       String?   @map("company_cnpj")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  deletedAt         DateTime? @map("deleted_at")

  company   Company?   @relation(fields: [companyCnpj], references: [cnpj])
  proposals Proposal[]

  @@map("employees")
}
